// <auto-generated />
using System;
using InventarioApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventarioApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190828005445_final")]
    partial class final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventarioApi.Entities.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("InventarioApi.Entities.Elemento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCompra");

                    b.Property<string>("Serial");

                    b.Property<long>("TelementoId");

                    b.Property<double>("ValorCompra");

                    b.HasKey("Id");

                    b.HasIndex("TelementoId");

                    b.ToTable("Elementos");
                });

            modelBuilder.Entity("InventarioApi.Entities.Persona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AreaId");

                    b.Property<string>("Direccion");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Email");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("PrimerApellido")
                        .IsRequired();

                    b.Property<string>("PrimerNombre")
                        .IsRequired();

                    b.Property<string>("SegundoApellido");

                    b.Property<string>("SegundoNombre");

                    b.Property<long>("TdocumentoId");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("TdocumentoId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("InventarioApi.Entities.PersonaElemento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ElementoId");

                    b.Property<DateTime>("FechaAsignacion");

                    b.Property<DateTime>("FechaRetiro");

                    b.Property<string>("ObservacionAsignacion");

                    b.Property<string>("ObservacionRetiro");

                    b.Property<long>("PersonaId");

                    b.HasKey("Id");

                    b.HasIndex("ElementoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("PersonaElementos");
                });

            modelBuilder.Entity("InventarioApi.Entities.Tdocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Sigla")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tdocumentos");
                });

            modelBuilder.Entity("InventarioApi.Entities.Telemento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Telementos");
                });

            modelBuilder.Entity("InventarioApi.Entities.Elemento", b =>
                {
                    b.HasOne("InventarioApi.Entities.Telemento", "Telemento")
                        .WithMany("Elementos")
                        .HasForeignKey("TelementoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioApi.Entities.Persona", b =>
                {
                    b.HasOne("InventarioApi.Entities.Area")
                        .WithMany("Personas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioApi.Entities.Tdocumento")
                        .WithMany("Personas")
                        .HasForeignKey("TdocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioApi.Entities.PersonaElemento", b =>
                {
                    b.HasOne("InventarioApi.Entities.Elemento")
                        .WithMany("PersonaElementos")
                        .HasForeignKey("ElementoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioApi.Entities.Persona")
                        .WithMany("PersonaElementos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
